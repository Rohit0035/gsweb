{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","components/product/ShopSize.js","components/product/ShopTag.js","components/product/ShopBrand.js","components/product/ShopPrice.js","wrappers/product/ShopSidebar.js","pages/shop/ShopGridKidsColumn.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","ShopTopAction","getLayout","getFilterSortParams","productCount","sortedProductCount","ShopTopbar","ShopSearch","action","type","placeholder","ShopCategories","categories","getSortParams","cb","onClick","e","setActiveSort","map","category","key","console","log","_id","name","ShopColor","colors","getonecolor","color","style","backgroundColor","colorName","borderRadius","height","width","ShopSize","sizes","getonesize","size","sizeName","ShopTag","tags","getonetag","tag","ShopBrand","brands","getonebrand","valuetext","value","ShopPrice","priceobj","React","useState","setValue","Box","Slider","getAriaLabel","scale","i","onChange","event","newValue","min","max","valueLabelDisplay","getAriaValueText","ShopSidebar","products","sideSpaceClass","brand","callback","tagcallback","colorcallback","sizecallback","brandcallback","pricerange","getIndividualCategories","getIndividualColors","getProductsIndividualSizes","getIndividualTags","data","id","childData","connect","state","productData","location","sliderClassName","product","currency","addToCart","addToWishlist","addToCompare","cartItem","wishlistItem","discountedPrice","compareItem","spaceBottomClass","colorClass","titlePriceClass","useToasts","addToast","layout","sortType","sortValue","filterSortType","filterSortValue","offset","setOffset","currentPage","setCurrentPage","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","men","setMen","a","fetch","response","json","getData","content","to","process","headerTop","src","product_img","alt","product_name","sell_price","totalRecords","length","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"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","file":"static/js/66.3416b161.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        {/* <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div> */}\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      {/* <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import React from \"react\";\r\n\r\nconst ShopSearch = () => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\r\n          <input type=\"text\" placeholder=\"Search here...\" />\r\n          <button>\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams,cb }) => {\r\n\r\n  // const [selectedcategory, setSelectedcategory] = useState('')\r\n  // const sendData = () => {\r\n  //   cb(selectedcategory);\r\n  // };\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        console.log(category._id);\r\n                        cb(category._id)\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category.name}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\nconst dot = {\r\n    height: \"25px\",\r\n    width: \"25px\",\r\n    borderRadius: \"50%\",\r\n    display: \"inline-block\",\r\n  \r\n}\r\n\r\nconst ShopColor = ({ colors, getSortParams,getonecolor }) => {\r\n  \r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Color </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Colors{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getonecolor(color._id)\r\n                        console.log(color._id)\r\n                        getSortParams(\"color\", color);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /><span style={{backgroundColor: color?.colorName,borderRadius: \"50%\",height: 25,\r\n    width: 25}}></span> {color?.colorName}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No colors found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopSize = ({ sizes, getSortParams,getonesize }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-40\">\r\n      <h4 className=\"pro-sidebar-title\">Size </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {sizes ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"size\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Sizes{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {sizes.map((size, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      className=\"text-uppercase\"\r\n                      onClick={e => {\r\n                        console.log(size._id);\r\n                        getonesize(size._id);\r\n                        getSortParams(\"size\", size);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" />\r\n                      {size.sizeName}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No sizes found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSize.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  sizes: PropTypes.array\r\n};\r\n\r\nexport default ShopSize;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams,getonetag }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getonetag(tag)\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopBrand = ({ brands, getSortParams,getonebrand }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Brand </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {brands ? (\r\n          <ul>\r\n            {brands.map((brands, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      getonebrand(brands._id)\r\n                      getSortParams(\"brands\", brands);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {brands.name}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No brands found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopBrand.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  brands: PropTypes.array,\r\n};\r\n\r\nexport default ShopBrand;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\n\r\n\r\n// const ShopPrice=({ tags, getSortParams,getonetag })=> {\r\n//   const [value, setValue] = React.useState([20, 37]);\r\n\r\n//   const handleChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: 300 }}>\r\n//       <Slider\r\n//         getAriaLabel={() => 'Temperature range'}\r\n//         value={value}\r\n//         onChange={handleChange}\r\n//         valueLabelDisplay=\"auto\"\r\n//         getAriaValueText={valuetext}\r\n//       />\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n\r\nconst ShopPrice = ({ tags, getSortParams,priceobj }) => {\r\n  const [value, setValue] = React.useState([1, 90]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    // console.log(newValue[0]*100)\r\n    priceobj({min:newValue[0]*25,max:newValue[1]*25})\r\n    // getminvalue(newValue[0]*100)\r\n    // console.log(newValue[1]*100)\r\n    // getmaxvalue(newValue[1]*100)\r\n  };\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Price Range </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n      <Box >\r\n      <Slider\r\n        getAriaLabel={() => 'Price range'}\r\n        value={value}\r\n        scale={(i) => 25*i }\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        getAriaValueText={valuetext}\r\n      />\r\n    </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopPrice.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  price: PropTypes.array\r\n};\r\n\r\nexport default ShopPrice;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\nimport ShopTag from \"../../components/product/ShopTag\";\r\nimport ShopBrand from \"../../components/product/ShopBrand\";\r\nimport ShopPrice from \"../../components/product/ShopPrice\";\r\n\r\nconst ShopSidebar = ({\r\n  products,\r\n  getSortParams,\r\n  sideSpaceClass,\r\n  colors,\r\n  sizes,\r\n  category,\r\n  tags,\r\n  brand,\r\n  callback,\r\n  tagcallback,\r\n  colorcallback,\r\n  sizecallback,\r\n  brandcallback,\r\n  pricerange\r\n}) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n  // const dataid = getIndividualTags(products);\r\n  const callbackFunction = childData => {\r\n    callback(childData)\r\n    console.log(childData);;\r\n  };\r\n\r\n  const tagcallbackMiddle = data => {\r\n    tagcallback(data)\r\n    console.log(data);;\r\n  };\r\n  const colorcallbackMiddle = id => {\r\n    colorcallback(id)\r\n    console.log(id);;\r\n  };\r\n  const sizecallbackMiddle = id => {\r\n    sizecallback(id)\r\n    console.log(id);;\r\n  };\r\n  const brandcallbackMiddle = id => {\r\n    brandcallback(id)\r\n    console.log(id);;\r\n  };\r\n  // const minratecallbackMiddle = value => {\r\n  //   minratecallback(value)\r\n  //   console.log(value);;\r\n  // };\r\n  // const maxratecallbackMiddle = value => {\r\n  //   maxratecallback(value)\r\n  //   console.log(value);;\r\n  // };\r\n  const pricerangecallbackmiddle = value => {\r\n    // maxratecallback(value)\r\n    pricerange(value)\r\n    console.log(value);;\r\n  };\r\n  // const tag = fromchildtohere()\r\n\r\n  return (\r\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\r\n      {/* shop search */}\r\n      <ShopSearch />\r\n\r\n      {/* filter by price range */}\r\n    <ShopPrice tags={tags} getSortParams={getSortParams} priceobj={pricerangecallbackmiddle} />\r\n\r\n    {/* filter by tag */}\r\n    <ShopTag tags={tags} getSortParams={getSortParams} getonetag={tagcallbackMiddle} />\r\n\r\n      \r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={colors} getSortParams={getSortParams} getonecolor={colorcallbackMiddle}/>\r\n\r\n      {/* filter by size */}\r\n      <ShopSize sizes={sizes} getSortParams={getSortParams} getonesize={sizecallbackMiddle}/>\r\n\r\n      \r\n      <ShopBrand brands={brand} getSortParams={getSortParams} getonebrand={brandcallbackMiddle}/>\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories categories={category} getSortParams={getSortParams} cb={callbackFunction} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string,\r\n};\r\n\r\nexport default ShopSidebar;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\n//import ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n//import ProductModal from \"../../components/product/ProductModal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst ShopGridKidsColumn = ({\r\n  location,\r\n  products,\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  discountedPrice,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  //const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const [layout, setLayout] = useState(\"grid two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  const pageLimit = 16;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  const [men, setMen] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const response = await fetch(\r\n        \"http://44.205.32.29:8000/admin/getproductbytagname/Kids\"\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      setMen(data.data);\r\n      console.log(data.data);\r\n    }\r\n    getData();\r\n    return;\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {/* <div\r\n                className=\"col-lg-3 pt-2\"\r\n                style={{ backgroundColor: \"#E5E8E8\" }}\r\n              >\r\n                {/* shop sidebar */}\r\n              {/*  <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div> */}\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar default \r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                /> */}\r\n\r\n                {/* shop page content default */}\r\n                {/* <ShopProducts layout={layout} products={currentData} /> */}\r\n                <div className=\"shop-bottom-area mt-35\">\r\n                  <div className={`row ${layout ? layout : \"\"}`}>\r\n                    {/* <ProductGridTwo\r\n                      products={products}\r\n                      spaceBottomClass=\"mb-25\"\r\n                    /> */}\r\n                    <Fragment>\r\n                      {men.map((product) => (\r\n                        <div\r\n                          className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\r\n                            sliderClassName ? sliderClassName : \"\"\r\n                          }`}\r\n                          key={product._id}\r\n                        >\r\n                          <div\r\n                            className={`product-wrap-2 ${\r\n                              spaceBottomClass ? spaceBottomClass : \"\"\r\n                            } ${colorClass ? colorClass : \"\"} `}\r\n                          >\r\n                            <div className=\"product-img\">\r\n                              <Link\r\n                                to={\r\n                                  process.env.PUBLIC_URL +\r\n                                  \"/product-sticky/\" +\r\n                                  product._id\r\n                                }\r\n                              >\r\n                                <img\r\n                                  className=\"default-img\"\r\n                                  src={product.product_img[0]}\r\n                                  alt=\"\"\r\n                                  //   style={{ width: \"250px\", height: \"300px\" }}\r\n                                />\r\n\r\n                                <img\r\n                                  className=\"hover-img\"\r\n                                  src={product.product_img[1]}\r\n                                  alt=\"\"\r\n                                  //   style={{ width: \"200px\", height: \"250px\" }}\r\n                                />\r\n                              </Link>\r\n                              {/* {product.discount || product.new ? (\r\n                <div className=\"product-img-badges\">\r\n                  {product.discount ? (\r\n                    <span className=\"pink\">-{product.discount}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n                              <div className=\"product-action-2\">\r\n                                {/* {product.affiliateLink ? (\r\n                                  <a\r\n                                    href={product.affiliateLink}\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                    title=\"Buy now\"\r\n                                  >\r\n                                    {\" \"}\r\n                                    {/* <i className=\"fa fa-shopping-cart\"></i>{\" \"} */}\r\n                                {/*  </a>\r\n                                ) : product.variation &&\r\n                                  product.variation.length >= 1 ? (\r\n                                  <Link\r\n                                    to={`${process.env.PUBLIC_URL}/product/${product.id}`}\r\n                                    title=\"Select options\"\r\n                                  >\r\n                                    <i className=\"fa fa-cog\"></i>\r\n                                  </Link>\r\n                                ) : product.stock && product.stock > 0 ? (\r\n                                  {/* <button\r\n                                    onClick={() => addToCart(product, addToast)}\r\n                                    className={\r\n                                      cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                        ? \"active\"\r\n                                        : \"\"\r\n                                    }\r\n                                    disabled={\r\n                                      cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                    }\r\n                                    title={\r\n                                      cartItem !== undefined\r\n                                        ? \"Added to cart\"\r\n                                        : \"Add to cart\"\r\n                                    }\r\n                                  >\r\n                                    {\" \"}\r\n                                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                                  </button> */}\r\n                                {/*} <button\r\n                                  disabled\r\n                                  className=\"active\"\r\n                                  title=\"Out of stock\"\r\n                                >\r\n                                  <i className=\"fa fa-shopping-cart\"></i>\r\n                                </button>\r\n                                */}\r\n                                {/* \r\n                                <button\r\n                                  onClick={() => setModalShow(true)}\r\n                                  title=\"Quick View\"\r\n                                >\r\n                                  <i className=\"fa fa-eye\"></i>\r\n                                </button> */}\r\n                                {/* <button\r\n                                  className={\r\n                                    compareItem !== undefined ? \"active\" : \"\"\r\n                                  }\r\n                                  disabled={compareItem !== undefined}\r\n                                  title={\r\n                                    compareItem !== undefined\r\n                                      ? \"Added to compare\"\r\n                                      : \"Add to compare\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    addToCompare(product, addToast)\r\n                                  }\r\n                                >\r\n                                  <i className=\"fa fa-retweet\"></i>\r\n                                </button> */}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"product-content-2\">\r\n                              <div\r\n                                className={`title-price-wrap-2 ${\r\n                                  titlePriceClass ? titlePriceClass : \"\"\r\n                                }`}\r\n                              >\r\n                                <h3>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      product._id\r\n                                    }\r\n                                  >\r\n                                    {product.product_name}\r\n                                  </Link>\r\n                                </h3>\r\n                                <div className=\"price-2\">\r\n                                  <Fragment>\r\n                                    <span>₹ {product.sell_price}</span>\r\n                                  </Fragment>\r\n                                </div>\r\n                              </div>\r\n                              {/* <div className=\"pro-wishlist-2\">\r\n                                <button\r\n                                  className={\r\n                                    wishlistItem !== undefined ? \"active\" : \"\"\r\n                                  }\r\n                                  disabled={wishlistItem !== undefined}\r\n                                  title={\r\n                                    wishlistItem !== undefined\r\n                                      ? \"Added to wishlist\"\r\n                                      : \"Add to wishlist\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    addToWishlist(product, addToast)\r\n                                  }\r\n                                >\r\n                                  <i className=\"fa fa-heart-o\" />\r\n                                </button>\r\n                              </div> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                      {/* product modal */}\r\n                      {/* <ProductModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        product={product}\r\n                        currency={currency}\r\n                        discountedprice={discountedPrice}\r\n                        cartitem={cartItem}\r\n                        wishlistitem={wishlistItem}\r\n                        compareitem={compareItem}\r\n                        addtocart={addToCart}\r\n                        addtowishlist={addToWishlist}\r\n                        addtocompare={addToCompare}\r\n                        addtoast={addToast}\r\n                      /> */}\r\n                    </Fragment>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopGridKidsColumn.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.productData.products,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopGridKidsColumn);\r\n"],"sourceRoot":""}